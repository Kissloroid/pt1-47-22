"""
Как ясно из названия, римские цифры появились еще в Древнем Риме. Но даже после падения
Римской империи они продолжали использоваться на территории Европы вплоть до позднего
Средневековья, а в определенных случаях применяются и сегодня.
Римские цифры базируются на обозначениях M, D, C, L, X, V и I, соответствующих числам
1000, 500, 100, 50, 10, 5 и 1. В основном римские цифры в составляющих их числах располагаются
в порядке убывания – от больших к меньшим. В этом случае итоговое число равно сумме всех
составляющих его римских цифр. Если цифры меньшего номинала предшествуют цифрам большего
номинала, то первые вычитаются из вторых и итог прибавляется к общей сумме. В такой манере
могут использоваться римские цифры C, X и I. При этом вычитание производится только из чисел,
максимум в десять раз превосходящих вычитаемое. Таким образом, цифра I может предшествовать V
или X, но не может вычитаться из L, C, D или M. А значит, число 99 должно быть написано как XCIX,
а не IC.
Создайте рекурсивную функцию, которая будет переводить римскую запись чисел в десятичную.
Функция должна обрабатывать один или два символа в начале строки, после чего будет производиться
ее рекурсивный вызов для оставшихся символов. Используйте пустую строку с возвращаемым значением 0
в качестве базового случая. Также напишите основную программу, которая будет запрашивать у
пользователя число, введенное римскими цифрами, и отображать его десятичный эквивалент.
При этом можно сделать допуск о том, что пользователь всегда вводит корректное число, так что
обработку ошибок вам реализовывать не нужно.
"""


def from_roman(input_number):
    """Converts a number from Roman to Arabic"""

    rom_arab_num = {'M': 1000, 'D': 500, 'C': 100, 'L': 50, 'X': 10, 'V': 5, 'I': 1}
    two_number = {'CM': 900, 'CD': 400, 'XC': 90, 'XL': 40, 'IX': 9, 'IV': 4}

    result = []
    while input_number:

        if input_number == "":
            return 0
        if input_number[:2] in two_number:
            result.append(two_number[input_number[:2]])
            if len(input_number[2:]) >= 2 or len(input_number[2:]) >= 1:
                input_number = input_number[2:]
                result.append(from_roman(input_number))
                input_number = ""
            else:
                break
        else:
            result.append(rom_arab_num[input_number[0]])
            if len(input_number[1:]) >= 1:
                input_number = input_number[1:]
                result.append(from_roman(input_number))
                input_number = ""
            else:
                break
    result = sum(result)
    return result


input_data = input('Введите число римскими цифрами: ').upper()
print(f'В формате арабских цифр: {from_roman(input_data)}')
